---
import BaseLayout from '../../layouts/BaseLayout.astro';
import { getCollection } from 'astro:content';

export async function getStaticPaths() {
  const blogPosts = await getCollection('blog');
  return blogPosts.map(post => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

const { post } = Astro.props;
const { Content } = await post.render();
---

<BaseLayout title={post.data.title} description={post.data.description}>
  <article class="blog-post">
    <div class="container">
      <header class="post-header">
        <h1>{post.data.title}</h1>
        <div class="post-meta">
          <time datetime={post.data.date.toISOString()}>
            {post.data.date.toLocaleDateString('ja-JP', {
              year: 'numeric',
              month: 'long',
              day: 'numeric'
            })}
          </time>
          {post.data.category && (
            <span class="post-category">{post.data.category}</span>
          )}
        </div>
        {post.data.tags && post.data.tags.length > 0 && (
          <div class="post-tags">
            {post.data.tags.map((tag: string) => (
              <span class="tag">{tag}</span>
            ))}
          </div>
        )}
      </header>

      <div class="post-content">
        <Content />
      </div>

      <footer class="post-footer">
        <div class="back-to-list">
          <a href="/blog/">← ブログ一覧に戻る</a>
        </div>
      </footer>
    </div>
  </article>
</BaseLayout>

<style>
.blog-post {
  padding: 4rem 0;
  min-height: 60vh;
}

.post-header {
  margin-bottom: 3rem;
  padding-bottom: 2rem;
  border-bottom: 2px solid #e0e0e0;
}

.post-header h1 {
  font-size: 2rem;
  line-height: 1.4;
  margin-bottom: 1rem;
  color: #333;
}

.post-meta {
  display: flex;
  gap: 1rem;
  align-items: center;
  color: #666;
  font-size: 0.95rem;
  margin-bottom: 1rem;
}

.post-category {
  background: #f0f0f0;
  padding: 0.25rem 0.75rem;
  border-radius: 4px;
  font-size: 0.875rem;
}

.post-tags {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
  margin-top: 1rem;
}

.tag {
  background: #e8f4fd;
  color: #0066cc;
  padding: 0.25rem 0.5rem;
  border-radius: 4px;
  font-size: 0.8rem;
}

.post-content {
  font-size: 1.05rem;
  line-height: 1.8;
  color: #333;
}

.post-content :global(h2) {
  margin-top: 2.5rem;
  margin-bottom: 1rem;
  font-size: 1.75rem;
  color: #222;
}

.post-content :global(h3) {
  margin-top: 2rem;
  margin-bottom: 0.75rem;
  font-size: 1.4rem;
  color: #333;
}

.post-content :global(p) {
  margin-bottom: 1.5rem;
}

.post-content :global(ul),
.post-content :global(ol) {
  margin-bottom: 1.5rem;
  padding-left: 2rem;
}

.post-content :global(li) {
  margin-bottom: 0.5rem;
}

.post-content :global(a) {
  color: #0066cc;
  text-decoration: underline;
}

.post-content :global(a:hover) {
  color: #0052a3;
}

.post-footer {
  margin-top: 4rem;
  padding-top: 2rem;
  border-top: 2px solid #e0e0e0;
}

.back-to-list a {
  color: #0066cc;
  text-decoration: none;
  font-weight: 500;
}

.back-to-list a:hover {
  text-decoration: underline;
}

@media (max-width: 768px) {
  .post-header h1 {
    font-size: 1.5rem;
  }

  .post-content {
    font-size: 1rem;
  }

  .post-content :global(h2) {
    font-size: 1.4rem;
  }

  .post-content :global(h3) {
    font-size: 1.2rem;
  }
}
</style>
